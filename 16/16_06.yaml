---
settings:
    package_name:  com.tcl.cyberui  #被测应用的包名#页面焦点移动
    retry_times: 0                 #脚本失败重试测试
    default_test_sleep: 1000
script_steps:
  -
    test_desc: 命令行强行停止应用
    test_action: outside_launch                   #通过命令行调用
    data: am force-stop com.tcl.cyberui         #强行停止应用
    test_sleep: 5000
  -
    test_desc: 命令进入Launcher主页
    test_action: outside_launch  #通过命令行调用
    data: am start com.tcl.cyberui/com.tcl.cyberui.MainActivity #程序入口
    test_sleep: 5000               #键值当前操作结束后等待时间
  -
    test_desc: 右键
    test_action: send_key_event  #发送遥控器按键1次
    data: right                    #键值
    test_sleep: 1000               #键值当前操作结束后等待时间
  -  
    test_desc: 打开采集器视频流检测  #当前步骤描述
    test_action: start_image_stream  #打开采集器视频流检测开关,必须在图片比对操作前打开
    data: 70000                       #采集器图片采集时间，单位毫秒
    test_sleep: 800               #延时800ms
  -
    test_desc: 右键
    test_action: send_key_event  #发送遥控器按键2次
    data: right                    #键值
    test_sleep: 1000               #键值当前操作结束后等待时间
    tag: time1
  -
    test_desc: 右键
    test_action: send_key_event  #发送遥控器按键3次
    data: right                    #键值
    test_sleep: 1000               #键值当前操作结束后等待时间
  -
    test_desc: 右键
    test_action: send_key_event  #发送遥控器按键4次
    data: right                    #键值
    test_sleep: 1000               #键值当前操作结束后等待时间
  -
    test_desc: 右键
    test_action: send_key_event  #发送遥控器按键5次
    data: right                    #键值
    test_sleep: 1000               #键值当前操作结束后等待时间
  -
    test_desc: 右键
    test_action: send_key_event  #发送遥控器按键6次
    data: right                    #键值
    test_sleep: 1000               #键值当前操作结束后等待时间
  -
    test_desc: 右键
    test_action: send_key_event  #发送遥控器按键7次
    data: right                    #键值
    test_sleep: 1000               #键值当前操作结束后等待时间
  -
    test_desc: 右键
    test_action: send_key_event  #发送遥控器按键8次
    data: right                    #键值
    test_sleep: 1000               #键值当前操作结束后等待时间
  -
    test_desc: 右键
    test_action: send_key_event  #发送遥控器按键9次
    data: right                    #键值
    test_sleep: 1000               #键值当前操作结束后等待时间
  -
    test_desc: 左键
    test_action: send_key_event  #发送遥控器按键1次
    data: left                    #键值
    test_sleep: 1000               #键值当前操作结束后等待时间
  -
    test_desc: 左键
    test_action: send_key_event  #发送遥控器按键2次
    data: left                    #键值
    test_sleep: 1000               #键值当前操作结束后等待时间
  -
    test_desc: 左键
    test_action: send_key_event  #发送遥控器按键3次
    data: left                    #键值
    test_sleep: 1000               #键值当前操作结束后等待时间
  -
    test_desc: 左键
    test_action: send_key_event  #发送遥控器按键4次
    data: left                    #键值
    test_sleep: 1000               #键值当前操作结束后等待时间
  -
    test_desc: 左键
    test_action: send_key_event  #发送遥控器按键5次
    data: left                    #键值
    test_sleep: 1000               #键值当前操作结束后等待时间
  -
    test_desc: 左键
    test_action: send_key_event  #发送遥控器按键6次
    data: left                    #键值
    test_sleep: 1000               #键值当前操作结束后等待时间
  -
    test_desc: 左键
    test_action: send_key_event  #发送遥控器按键7次
    data: left                    #键值
    test_sleep: 1000               #键值当前操作结束后等待时间
  -
    test_desc: 左键
    test_action: send_key_event  #发送遥控器按键8次
    data: left                    #键值
    test_sleep: 1000               #键值当前操作结束后等待时间
  -
    test_desc: 左键
    test_action: send_key_event  #发送遥控器按键9次
    data: left                    #键值
    test_sleep: 1000               #键值当前操作结束后等待时间
  -
    test_desc: 比较像素
    test_action: pixel_compare   #程序开启像素比较，30s超时
    data:
     locations: #坐标值列表
       -  [366, 134]
     rgbs:  #与坐标对应的rgb值列表
       -  (220, 2, 63)
    tag: time2
  -
    test_desc: 计算时间
    test_action: compute   #时间计算
    data: time2-time1
    expectation: 70000      #期望像素比对获取的结果值       